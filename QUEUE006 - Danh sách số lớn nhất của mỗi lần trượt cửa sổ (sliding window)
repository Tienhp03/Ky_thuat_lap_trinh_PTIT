#include<bits/stdc++.h>

using namespace std;

vector<int> solve(vector<int>& nums, int k) {
        deque<int> dq;
        vector<int> ans;
        for(int i =0;i<k;i++){
            while(!dq.empty()&& nums[i]>=nums[dq.back()])
                dq.pop_back();
            dq.push_back(i);
        }
        ans.push_back(nums[dq.front()]);
        for(int i=k;i<nums.size();i++){
            if(i-dq.front()>=k)
                dq.pop_front();
             while(!dq.empty()&& nums[i]>=nums[dq.back()])
                dq.pop_back();
            dq.push_back(i);
            ans.push_back(nums[dq.front()]);
        }
        return ans;
    }


int main(){
	int t; cin>>t;
	cin.ignore();
	while(t--){
		string s; int k;
		cin>>s>>k;
		vector<int>x;
		string tmp="";
		
		for(char c:s){
			if(c==','){
				x.push_back(stoi(tmp));
				tmp="";
			}else tmp+=c;
		}
		x.push_back(stoi(tmp));
		
		vector<int>v=solve(x,k);
        int l=v.size();
         for(int i=0;i<l-1;i++){
         cout<<v[i]<<",";
        }
         cout<<v[l-1]<<endl;
	}
	return 0;
}
